module org.scijava.ops.engine {

/*
 * This is autogenerated source code -- DO NOT EDIT. Instead, edit the
 * corresponding template in templates/ and rerun bin/generate.groovy.
 */

## Determines all packages in the module
#set($packages = $modulePackages.call("src/main/java/org/scijava"))
## Defines the packages that should be exported to org.scijava
#set($scijavaPackages = ["org.scijava.ops.engine", "org.scijava.ops.engine.impl", "org.scijava.ops.engine.matcher.impl", "org.scijava.ops.engine.conversionLoss.impl"])
## Defines the packages that should be exported to therapi.runtime.javadoc
#set($therapiPackages = $modulePackages.call("src/main/java/org/scijava"))

	exports org.scijava.ops.engine;
	exports org.scijava.ops.engine.conversionLoss;
	exports org.scijava.ops.engine.util;

#foreach($package in $packages)
	opens $package to $opensToString.call($package, $scijavaPackages, $therapiPackages);
#end

	requires java.compiler;

	requires org.scijava.common3;
	requires org.scijava.collections;
	requires org.scijava.discovery;
	requires org.scijava.discovery.therapi;
	requires org.scijava.function;
	requires org.scijava.log2;
	requires org.scijava.meta;
	requires org.scijava.priority;
	requires org.scijava.progress;
	requires org.scijava.struct;
	requires transitive org.scijava.ops.api;
	requires org.scijava.ops.spi;
	requires org.scijava.types;

	requires javassist;
	requires org.yaml.snakeyaml;

	requires therapi.runtime.javadoc;

	uses javax.annotation.processing.Processor;
	uses org.scijava.discovery.Discoverer;
	uses org.scijava.ops.api.InfoChainGenerator;
	uses org.scijava.ops.api.OpInfoGenerator;
	uses org.scijava.ops.api.OpWrapper;
	uses org.scijava.ops.api.features.MatchingRoutine;
	uses org.scijava.ops.engine.reduce.InfoReducer;
	uses org.scijava.ops.engine.yaml.YAMLOpInfoCreator;
	uses org.scijava.ops.spi.Op;
	uses org.scijava.ops.spi.OpCollection;
	uses org.scijava.parse2.Parser;
	uses org.scijava.types.TypeExtractor;

	provides org.scijava.discovery.Discoverer with
 		org.scijava.ops.engine.impl.TherapiOpInfoDiscoverer;

	provides org.scijava.ops.api.InfoChainGenerator with
		org.scijava.ops.engine.matcher.impl.AdaptationInfoChainGenerator,
		org.scijava.ops.engine.impl.DefaultInfoChainGenerator,
		org.scijava.ops.engine.simplify.SimplificationInfoChainGenerator;

	provides org.scijava.ops.api.OpInfoGenerator with
	    org.scijava.ops.engine.impl.OpClassOpInfoGenerator,
	    org.scijava.ops.engine.impl.OpCollectionInfoGenerator,
		org.scijava.ops.engine.impl.TherapiOpInfoGenerator,
		org.scijava.ops.engine.reduce.ReducedOpInfoGenerator;

	provides org.scijava.ops.api.OpWrapper with
		org.scijava.ops.engine.matcher.impl.OpWrappers.ProducerOpWrapper,
#foreach($arity in [1..$maxArity])
		org.scijava.ops.engine.matcher.impl.OpWrappers.Function${arity}OpWrapper,
#end
#foreach($arity in [0..$maxArity])
		org.scijava.ops.engine.matcher.impl.OpWrappers.Computer${arity}OpWrapper,
#end
		org.scijava.ops.engine.matcher.impl.OpWrappers.Inplace1OpWrapper,
#foreach($arity in [2..$maxArity])
#foreach($a in [1..$arity])
		org.scijava.ops.engine.matcher.impl.OpWrappers.Inplace${arity}_${a}OpWrapper,
#end
#end
		org.scijava.ops.engine.conversionLoss.impl.LossReporterWrapper;

	provides org.scijava.ops.api.features.MatchingRoutine with
		org.scijava.ops.engine.matcher.impl.RuntimeSafeMatchingRoutine,
		org.scijava.ops.engine.matcher.impl.AdaptationMatchingRoutine,
		org.scijava.ops.engine.matcher.impl.SimplificationMatchingRoutine;

	provides org.scijava.ops.spi.OpCollection with
	    org.scijava.ops.engine.adapt.lift.ComputerToArrays,
	    org.scijava.ops.engine.adapt.lift.ComputerToIterables,
	    org.scijava.ops.engine.adapt.lift.FunctionToArrays,
	    org.scijava.ops.engine.adapt.lift.FunctionToIterables,
	    org.scijava.ops.engine.adapt.lift.InplaceToArrays,
	    org.scijava.ops.engine.conversionLoss.impl.PrimitiveArrayLossReporters,
	    org.scijava.ops.engine.conversionLoss.impl.PrimitiveLossReporters,
	    org.scijava.ops.engine.copy.CopyOpCollection,
	    org.scijava.ops.engine.create.CreateOpCollection,
	    org.scijava.ops.engine.math.Add,
	    org.scijava.ops.engine.math.MathOpCollection,
	    org.scijava.ops.engine.math.Power,
	    org.scijava.ops.engine.math.Sqrt,
	    org.scijava.ops.engine.math.Zero,
	    org.scijava.ops.engine.simplify.PrimitiveArraySimplifiers,
	    org.scijava.ops.engine.simplify.PrimitiveSimplifiers;


	provides org.scijava.ops.spi.Op with //
#foreach($arity in [1..$maxArity])
		org.scijava.ops.engine.adapt.complexLift.ComputersToFunctionsAndLift.Computer${arity}ToFunction${arity}AndLiftViaSource,
		org.scijava.ops.engine.adapt.complexLift.FunctionsToComputersAndLift.Function${arity}ToComputer${arity}AndLiftAfter,
		org.scijava.ops.engine.adapt.complexLift.FunctionsToComputersAndLift.Function${arity}ToComputer${arity}AndLiftBefore,
		org.scijava.ops.engine.adapt.functional.ComputersToFunctionsViaFunction.Computer${arity}ToFunction${arity}ViaFunction,
#end
#foreach($arity in [0..$maxArity])
		org.scijava.ops.engine.adapt.functional.ComputersToFunctionsViaSource.Computer${arity}ToFunction${arity}ViaSource,
		org.scijava.ops.engine.adapt.functional.FunctionsToComputers.Function${arity}ToComputer${arity},
#end
		org.scijava.ops.engine.adapt.functional.InplacesToFunctions.Inplace1ToFunction1,
#foreach($arity in [2..$maxArity])
#foreach($a in [1..$arity])
		org.scijava.ops.engine.adapt.functional.InplacesToFunctions.Inplace${arity}_${a}ToFunction${arity},
#end
#end

		org.scijava.ops.engine.stats.Mean.MeanFunction;

    provides org.scijava.ops.engine.reduce.InfoReducer with //
        org.scijava.ops.engine.reduce.FunctionReducer,
        org.scijava.ops.engine.reduce.ComputerReducer;

    provides org.scijava.ops.engine.yaml.YAMLOpInfoCreator with
        org.scijava.ops.engine.yaml.YAMLJavaClassInfoCreator,
        org.scijava.ops.engine.yaml.YAMLJavaFieldInfoCreator,
        org.scijava.ops.engine.yaml.YAMLJavaMethodInfoCreator;
}
